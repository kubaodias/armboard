#
# This is for the "at91rm9200-DK" (not the EK) eval board.
#
# The two are probably very simular.... I have DK...
#
# It has atmel at91rm9200 chip.
source [find target/at91rm9200.cfg]
$_TARGETNAME configure -event gdb-attach { reset init }
$_TARGETNAME configure -event reset-init { at91rm9200_lab_init }

#flash bank <driver> <base> <size> <chip_width> <bus_width>
#flash_bank cfi 0x10000000 0x00200000 2 2 0


proc at91rm9200_lab_init { } {
    # Try to run at 1khz... Yea, that slow!
    # Chip is really running @ 32khz
    jtag_khz 8
    
    ## PMC_IDR - disable all interrupts
    mww 0xfffffc64 0xffffffff
    ##  disable all clocks but system clock
    mww 0xfffffc04 0xfffffffe
    ##  disable all clocks to pioa and piob
    mww 0xfffffc14 0xffffffc3
    ##  master clock = slow cpu = slow
    ##  (means the CPU is running at 32khz!)
    mww 0xfffffc30 0
    ##  main osc enable, wait 255 slow clock cycles
    mww 0xfffffc20 0x0000ff01
    ##  program pllA, MULA = 38, DIVA = 4, (MULA + 1) / DIV = 9.75
    mww 0xfffffc28 0x20263e04
    ##  program pllB
    mww 0xfffffc2c 0x10483e0e
    ##  let pll settle... sleep 100msec
    sleep 100
    ##  switch to fast clock
    mww 0xfffffc30 0x202
    ## Sleep some - (go read)
    sleep 100
    
    #========================================
    # CPU now runs at 180mhz
    # SYS runs at 60mhz.
    jtag_khz 2000
    #========================================
    
    ## TODO: program data lines D16-D31 in PIO

    ##  set memc for all memories
    ##  NCS1=SDRAMC
    mww 0xffffff60 0x02

    ##  program smc controller
    ##  not needed right now - for parallel flash
    mww 0xffffff70 0x3284


    ## 1. A minimum pause of 200 Î¼s is provided to precede any signal toggle.
    ## 2. An All Banks Precharge command is issued to the SDRAM devices.
    ## 3. Eight auto-refresh (CBR) cycles are provided.
    ## 4. A mode register set (MRS) cycle is issued to program the parameters of the SDRAM
    ##    devices, in particular CAS latency and burst length.
    ## 5. A Normal Mode command is provided, 3 clocks after tMRD is met.
    ## 6. Write refresh rate into the count field in the SDRAMC Refresh Timer register. (Refresh
    ##    rate = delay between refresh cycles).


    ##  init sdram, default value is 0x2a99c140
    ##  TXSR=TRAS=TRCD=TRP=TRC=TWR=15, CAS latency=2, Number of banks=4, Rows=11, Columns=8
    mww 0xffffff98 0x7fffffd0

    ##  all banks precharge
    ##  SMC Chip Select Register 4
    ##  was written to 0xffffff80, should be all banks precharge ?
    mww 0xffffff90 0x02

    ##  touch sdram chip to make it work
    mww 0x20000000 0

    ##  sdram controller mode register 
    ##  SDRAMC issues a Refresh command
    mww 0xffffff90 0x04

    mww 0x20000000 0
    mww 0x20000000 0
    mww 0x20000000 0
    mww 0x20000000 0
    mww 0x20000000 0
    mww 0x20000000 0
    mww 0x20000000 0
    mww 0x20000000 0
    ##  sdram controller mode register
    ##  Refresh, etc....
    mww 0xffffff90 0x03
    mww 0x20000080 0

    ##  Refresh Timer Register, count = 500, depends on MCK, 15.6us is a typical value
    mww 0xffffff94 0x1f4

    mww 0x20000080 0
    mww 0xffffff90 0x10
    mww 0x20000000 0
    mww 0xffffff00 0x01

}
